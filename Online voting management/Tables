CREATE TABLE ADMIN (
  admin_id INT PRIMARY KEY,
  full_name VARCHAR2(255) NOT NULL,
  email VARCHAR2(255) UNIQUE NOT NULL,
  password VARCHAR2(255) NOT NULL
);


CREATE TABLE VOTER (
  voter_id INT PRIMARY KEY,
  full_name VARCHAR2(255) NOT NULL,
  dob DATE NOT NULL,
  address CLOB NOT NULL,
  email VARCHAR2(255) UNIQUE NOT NULL,
  password VARCHAR2(255) NOT NULL,
  phone VARCHAR2(20),
  is_verified CHAR(1) CHECK (is_verified IN ('Y', 'N')),
  registration_date TIMESTAMP DEFAULT SYSTIMESTAMP,
  role VARCHAR2(100)
);


CREATE TABLE CANDIDATE (
  candidate_id INT PRIMARY KEY,
  full_name VARCHAR2(255) NOT NULL,
  symbol VARCHAR2(100) NOT NULL,
  party VARCHAR2(255) NOT NULL,
  manifesto CLOB,
  photo_url VARCHAR2(1000)
);

CREATE TABLE ELECTION (
  election_id INT PRIMARY KEY,
  name VARCHAR2(255) NOT NULL,
  election_type VARCHAR2(100) NOT NULL,
  election_date DATE NOT NULL,
  is_active CHAR(1) CHECK (is_active IN ('Y', 'N')),
  admin_id INT NOT NULL,
  description CLOB,
  CONSTRAINT fk_election_admin FOREIGN KEY (admin_id) REFERENCES ADMIN(admin_id)
);

CREATE TABLE SCHEDULE (
  schedule_id INT PRIMARY KEY,
  election_id INT NOT NULL,
  nomination_start TIMESTAMP NOT NULL,
  nomination_end TIMESTAMP NOT NULL,
  voting_start TIMESTAMP NOT NULL,
  voting_end TIMESTAMP NOT NULL,
  result_declared TIMESTAMP,
  CONSTRAINT fk_schedule_election FOREIGN KEY (election_id) REFERENCES ELECTION(election_id)
);


CREATE TABLE CONTEST (
  contest_id INT PRIMARY KEY,
  election_id INT NOT NULL,
  candidate_id INT NOT NULL,
  position VARCHAR2(100) NOT NULL,
  CONSTRAINT fk_contest_election FOREIGN KEY (election_id) REFERENCES ELECTION(election_id),
  CONSTRAINT fk_contest_candidate FOREIGN KEY (candidate_id) REFERENCES CANDIDATE(candidate_id),
  CONSTRAINT uq_contest_unique UNIQUE (election_id, candidate_id)
);

CREATE TABLE VOTE (
  vote_id INT PRIMARY KEY,
  contest_id INT NOT NULL,
  voter_id INT NOT NULL,
  vote_timestamp TIMESTAMP DEFAULT SYSTIMESTAMP,
  ip_address VARCHAR2(50),
  CONSTRAINT fk_vote_contest FOREIGN KEY (contest_id) REFERENCES CONTEST(contest_id),
  CONSTRAINT fk_vote_voter FOREIGN KEY (voter_id) REFERENCES VOTER(voter_id),
  CONSTRAINT uq_vote_unique UNIQUE (contest_id, voter_id)
);


CREATE TABLE RESULT (
  result_id INT PRIMARY KEY,
  election_id INT NOT NULL,
  candidate_id INT NOT NULL,
  total_votes INT DEFAULT 0,
  percentage NUMBER(5, 2),
  CONSTRAINT fk_result_election FOREIGN KEY (election_id) REFERENCES ELECTION(election_id),
  CONSTRAINT fk_result_candidate FOREIGN KEY (candidate_id) REFERENCES CANDIDATE(candidate_id)
);

CREATE TABLE AUDIT_LOG (
  log_id INT PRIMARY KEY,
  admin_id INT NOT NULL,
  action VARCHAR2(255) NOT NULL,
  description CLOB,
  action_time TIMESTAMP DEFAULT SYSTIMESTAMP,
  ip_address VARCHAR2(50),
  CONSTRAINT fk_audit_admin FOREIGN KEY (admin_id) REFERENCES ADMIN(admin_id)
);

CREATE TABLE NOTIFICATION (
  notification_id INT PRIMARY KEY,
  admin_id INT,
  voter_id INT,
  candidate_id INT,
  message CLOB NOT NULL,
  created_at TIMESTAMP DEFAULT SYSTIMESTAMP,
  is_read CHAR(1) CHECK (is_read IN ('Y', 'N')),
  CONSTRAINT fk_notification_admin FOREIGN KEY (admin_id) REFERENCES ADMIN(admin_id),
  CONSTRAINT fk_notification_voter FOREIGN KEY (voter_id) REFERENCES VOTER(voter_id),
  CONSTRAINT fk_notification_candidate FOREIGN KEY (candidate_id) REFERENCES CANDIDATE(candidate_id),
  CONSTRAINT chk_notification_target CHECK (
    admin_id IS NOT NULL OR voter_id IS NOT NULL OR candidate_id IS NOT NULL
  )
);


